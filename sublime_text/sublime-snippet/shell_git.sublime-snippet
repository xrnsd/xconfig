<snippet>
	<content><![CDATA[
# =========== 将修改生成为文件并打包
    git diff-tree -r --no-commit-id --name-only xxxxxxxx | xargs tar -rf xxxxxxxx.tar

    #备注：608e120和4abe32e为前后两个提交的hash
    git diff 608e120 4abe32e --name-only | xargs tar -rf xxxxxxxx.tar
# =========== 只打印hash
    git log --pretty=format:"%h"

# ===========  patch 相关
    git am xxx.patch #添加patch
    git format-patch -s hash值 -o patch路径 #将hash值之后提交生成到指定路径

# ===========  从所有历史中删除文件
    # 首先通过rev-list来找到仓库记录中的大文件
    git rev-list --objects --all | grep "\$(git verify-pack -v .git/objects/pack/*.idx | sort -k 3 -n | tail -5 | awk '{print\$1}')"
    # 然后通过filter-branch来重写这些大文件涉及到的所有提交（重写历史记录）,删除单个文件
    git filter-branch -f --prune-empty --index-filter 'git rm -rf --cached --ignore-unmatch xxxx/xxx/xxx' --tag-name-filter cat -- --all

# =========== 删除不存在对应远程分支的本地分支
    git remote prune origin


]]></content>
	<tabTrigger>xgit</tabTrigger>
	<scope>source.shell</scope>
	<description>git 常用命令</description>
</snippet>
